// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// low_level_score_test_vectorized
NumericVector low_level_score_test_vectorized(NumericVector a, NumericMatrix B, NumericVector w, IntegerMatrix index_mat);
RcppExport SEXP _lowmoi_low_level_score_test_vectorized(SEXP aSEXP, SEXP BSEXP, SEXP wSEXP, SEXP index_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type index_mat(index_matSEXP);
    rcpp_result_gen = Rcpp::wrap(low_level_score_test_vectorized(a, B, w, index_mat));
    return rcpp_result_gen;
END_RCPP
}
// low_level_permutation_test
NumericVector low_level_permutation_test(NumericVector y, IntegerMatrix index_mat);
RcppExport SEXP _lowmoi_low_level_permutation_test(SEXP ySEXP, SEXP index_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type index_mat(index_matSEXP);
    rcpp_result_gen = Rcpp::wrap(low_level_permutation_test(y, index_mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lowmoi_low_level_score_test_vectorized", (DL_FUNC) &_lowmoi_low_level_score_test_vectorized, 4},
    {"_lowmoi_low_level_permutation_test", (DL_FUNC) &_lowmoi_low_level_permutation_test, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_lowmoi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
